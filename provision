#!/bin/bash
# Auto build stack for Minecraft host at the Southampton STEM fair 2017

# Check ran by root, if not, elevate to root
if [[ $EUID -ne 0 ]]; then
    sudo su -s "$0"
    exit
fi

pushd .

# Install software stack
apt-get update
apt-get upgrade -y
apt-get install -y curl git unzip apt-transport-https ca-certificates software-properties-common
curl -fsSL https://yum.dockerproject.org/gpg | apt-key add -
printf "\n\n# Docker PPA\n" >> /etc/apt/sources.list
printf "deb https://apt.dockerproject.org/repo/ debian-$(lsb_release -cs) main" >> /etc/apt/sources.list
apt-get update
apt-get install -y docker-engine

# Install Oracle JDK
curl -v -j -k -L -H "Cookie: oraclelicense=accept-securebackup-cookie" http://download.oracle.com/otn-pub/java/jdk/8u121-b13/e9e7ea248e2c4826b92b3f075a80e441/jdk-8u121-linux-x64.tar.gz > /tmp/jdk.tar.gz
tar -zxf /tmp/jdk.tar.gz -C /opt
mv /opt/jdk* /opt/java
ln -s /opt/java/bin/java /usr/bin/java

# Build fresh Spigot jars
mkdir -p /opt/buildtools
curl -o /opt/buildtools/BuildTools.jar https://hub.spigotmc.org/jenkins/job/BuildTools/lastSuccessfulBuild/artifact/target/BuildTools.jar
cd /opt/buildtools
java -jar BuildTools.jar

# Create server data stores
for f in /mnt/*.zip; do
    worldName="$(basename $f .zip)"
    echo "Creating data directory for $worldName."
    mkdir -p /srv/server-data/mcs_$worldName/saves
    unzip /mnt/$worldName.zip -d /srv/server-data/mcs_$worldName/saves
done

# Create bungee config.yml
popd
config=docker-bungee/config.yml
echo "servers:" >> "$config"
pt=25566
for w in /srv/server-data/mcs_*; do
    [ -d "$w" ] || continue # if not a directory, skip
    worldName="$(basename $w | sed 's/mcs_//')"
    echo "  $worldName:" >> "$config"
    echo "    motd: Welcome to $worldName" >> "$config"
    echo "    address: localhost:$pt" >> "$config"
    echo "    restricted: false" >> "$config"
    let pt=pt+1
done

# Build docker images
cp /opt/buildtools/spigot-*.jar docker-spigot/spigot.jar
docker build -t spigotmc docker-spigot
docker build -t bungee docker-bungee

# Ask to start services
startup=""
printf "Initialise and start docker containers? (y/n): "
read startup
if [ "$startup" == "y" ]; then
    port=25566
    for w in /srv/server-data/mcs_*; do
        [ -d "$w" ] || continue # if not a directory, skip
        worldName="$(basename $w | sed 's/mcs_//')"
        docker run -d=true -p="$port":25565 -v=/srv/server-data/mcs_"$worldName":/srv/server --name mcs_"$worldName"_container -t spigotmc
        let port=port+1
    done
    docker run -d=true -p=25565:25565 -v=/srv/server-data/bungee:/srv/server --name bungeecord_container -t bungee
fi

# Inform user of server IP
printf "Server IP address: "
ip addr | grep 'inet ' | grep -vE '(127.0.0.1|docker)' | cut -d/ -f1 | awk '{ print $2 }'